2019-04-23 23:33:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table credit (id bigint generated by default as identity, balance double, card_no integer, limit[*] integer, name varchar(255), primary key (id))"; expected "identifier"; SQL statement:
create table credit (id bigint generated by default as identity, balance double, card_no integer, limit integer, name varchar(255), primary key (id)) [42001-199]
2019-04-23 23:34:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "credit" not found; SQL statement:
insert into credit (id, balance, card_no, limit, name) values (null, ?, ?, ?, ?) [42102-199]
2019-04-23 23:37:20 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table credit (id bigint generated by default as identity, balance double, card_no integer, limit[*] integer, name varchar(255), primary key (id))"; expected "identifier"; SQL statement:
create table credit (id bigint generated by default as identity, balance double, card_no integer, limit integer, name varchar(255), primary key (id)) [42001-199]
2019-04-23 23:37:20 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:708)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:242)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.closeConnection(DatasourceConnectionProviderImpl.java:127)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.releaseConnection(JdbcEnvironmentInitiator.java:185)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.release(DdlTransactionIsolatorNonJtaImpl.java:83)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.release(GenerationTargetToDatabase.java:90)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:140)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:155)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.test.credit.CreditCardApplication.main(CreditCardApplication.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2019-04-23 23:37:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table credit (id bigint generated by default as identity, balance double, card_no integer, limit[*] integer, name varchar(255), primary key (id))"; expected "identifier"; SQL statement:
create table credit (id bigint generated by default as identity, balance double, card_no integer, limit integer, name varchar(255), primary key (id)) [42001-199]
2019-04-23 23:37:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "credit" not found; SQL statement:
insert into credit (id, balance, card_no, limit, name) values (null, ?, ?, ?, ?) [42102-199]
2019-04-23 23:38:41 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table credit (id bigint generated by default as identity, balance double, card_no integer, limit[*] integer, cust_name varchar(255), primary key (id))"; expected "identifier"; SQL statement:
create table credit (id bigint generated by default as identity, balance double, card_no integer, limit integer, cust_name varchar(255), primary key (id)) [42001-199]
2019-04-23 23:39:02 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "credit" not found; SQL statement:
insert into credit (id, balance, card_no, limit, cust_name) values (null, ?, ?, ?, ?) [42102-199]
2019-04-24 09:56:13 jdbc[23]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table credit (id bigint generated by default as identity, balance double, card_no integer, limit[*] integer, cust_name varchar(255), primary key (id))"; expected "identifier"; SQL statement:
create table credit (id bigint generated by default as identity, balance double, card_no integer, limit integer, cust_name varchar(255), primary key (id)) [42001-199]
